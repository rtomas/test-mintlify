import { parseAsyncApiString } from './parseAsyncApiString.js';
export const getAsyncApiChannelMetadata = (asyncApiMetaField, asyncApiFiles) => {
    var _a, _b;
    const potentiallyParsedAsyncApiString = parseAsyncApiString(asyncApiMetaField);
    if (potentiallyParsedAsyncApiString == undefined) {
        return undefined;
    }
    const { channelId, filename } = potentiallyParsedAsyncApiString;
    let asyncApiFile = undefined;
    for (const file of asyncApiFiles) {
        const asyncApiSpec = file.spec;
        const hasAsyncApiChannel = asyncApiSpec.allChannels().has(channelId);
        const filenameMatches = !filename || filename === file.filename || filename === file.originalFileLocation;
        if (hasAsyncApiChannel && filenameMatches) {
            asyncApiFile = file;
        }
    }
    if (asyncApiFile == null) {
        return undefined;
    }
    const channelInterface = asyncApiFile.spec.channels().get(channelId);
    const channelTitle = (_a = channelInterface.title()) !== null && _a !== void 0 ? _a : '';
    const channelDescription = (_b = channelInterface.description()) !== null && _b !== void 0 ? _b : '';
    return {
        channelId,
        filename: asyncApiFile.filename,
        title: channelTitle,
        description: channelDescription,
    };
};
