import { parse, isAbsolute } from 'path';
import { normalizeRelativePath } from '../fs/normalizeRelativePath.js';
import { schemaFileFrontmatterIsOriginalFileLocation } from '../schema/common.js';
import { potentiallyParseOpenApiString } from './parseOpenApiString.js';
export function prepOpenApiFrontmatter(currPath, openapiFrontmatter) {
    if (!openapiFrontmatter)
        return undefined;
    const openapiObj = potentiallyParseOpenApiString(openapiFrontmatter);
    if ((openapiObj === null || openapiObj === void 0 ? void 0 : openapiObj.filename) && schemaFileFrontmatterIsOriginalFileLocation(openapiObj.filename)) {
        if (openapiObj.filename.startsWith('https://')) {
            return `${openapiObj.filename} ${openapiObj.method.toLowerCase()} ${openapiObj.endpoint}`;
        }
        const filenameIsAbsolute = isAbsolute(openapiObj.filename);
        const currDir = filenameIsAbsolute ? '/' : parse(currPath).dir;
        const newOpenApiFilename = normalizeRelativePath(currDir, openapiObj.filename);
        return `${newOpenApiFilename} ${openapiObj.method.toLowerCase()} ${openapiObj.endpoint}`;
    }
    return openapiFrontmatter;
}
